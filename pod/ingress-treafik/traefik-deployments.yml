apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: default
  name: traefik-ingress-controller
--- # traefik 负载均衡 运行在k8s-n4
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: default
  name: traefik
  labels:
    app: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      hostNetwork: true # 使用宿主机的网络
      serviceAccountName: traefik-ingress-controller # 调整策略
      containers:
        - name: traefik
          image: ccr.ccs.tencentyun.com/k7scn/traefik:v2.11.0 # traefik:v2.11
          args: # treafik 这里做域名证书的申请
            - --api.insecure
            - --accesslog
            - --entrypoints.web.Address=:8000
            - --entrypoints.websecure.Address=:4443
            - --providers.kubernetescrd
            - --certificatesresolvers.myresolver.acme.tlschallenge
            - --certificatesresolvers.myresolver.acme.email=foo@you.com
            - --certificatesresolvers.myresolver.acme.storage=acme.json
            # Please note that this is the staging Let's Encrypt server.
            # Once you get things working, you should remove that whole line altogether.
            - --certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
          ports: # traefik/pod的 80000 4443 8080这些端口
            - name: web
              containerPort: 8000
            - name: websecure
              containerPort: 4443
            - name: admin
              containerPort: 8080
      nodeName: k8s-n4 # 将treafik 负载pod 指定到k8s-n4上


--- # whoami pod应用服务
# kind: Deployment
# apiVersion: apps/v1
# metadata:
#   namespace: default
#   name: whoami
#   labels:
#     app: whoami
# spec:
#   replicas: 2
#   selector:
#     matchLabels:
#       app: whoami
#   template:
#     metadata:
#       labels:
#         app: whoami
#     spec:
#       containers:
#         - name: whoami
#           image: traefik/whoami
#           ports:
#             - name: web
#               containerPort: 80
#       affinity: # 将whoami 应用容器角度到 反亲和性，调度到非标签为ingress=treafik的节点上
#         nodeAffinity:
#           requiredDuringSchedulingIgnoredDuringExecution: 
#             nodeSelectorTerms:
#             - matchExpressions:
#               - key: ingress
#                 operator: NotIn
#                 values: 
#                   - treafik